
import { Dialect, DialectInfo } from "@/types";

export const DIALECTS: DialectInfo[] = [
  { code: "saudi", name: "Saudi", flag: "๐ธ๐ฆ", nameArabic: "ุณุนูุฏู" },
  { code: "emirati", name: "Emirati", flag: "๐ฆ๐ช", nameArabic: "ุฅูุงุฑุงุชู" },
  { code: "kuwaiti", name: "Kuwaiti", flag: "๐ฐ๐ผ", nameArabic: "ูููุชู" },
  { code: "bahraini", name: "Bahraini", flag: "๐ง๐ญ", nameArabic: "ุจุญุฑููู" },
  { code: "qatari", name: "Qatari", flag: "๐ถ๐ฆ", nameArabic: "ูุทุฑู" },
  { code: "omani", name: "Omani", flag: "๐ด๐ฒ", nameArabic: "ุนูุงูู" },
  { code: "yemeni", name: "Yemeni", flag: "๐พ๐ช", nameArabic: "ูููู" },
  { code: "iraqi", name: "Iraqi", flag: "๐ฎ๐ถ", nameArabic: "ุนุฑุงูู" },
  { code: "lebanese", name: "Lebanese", flag: "๐ฑ๐ง", nameArabic: "ูุจูุงูู" },
  { code: "syrian", name: "Syrian", flag: "๐ธ๐พ", nameArabic: "ุณูุฑู" },
  { code: "jordanian", name: "Jordanian", flag: "๐ฏ๐ด", nameArabic: "ุฃุฑุฏูู" },
  { code: "palestinian", name: "Palestinian", flag: "๐ต๐ธ", nameArabic: "ููุณุทููู" },
  { code: "egyptian", name: "Egyptian", flag: "๐ช๐ฌ", nameArabic: "ูุตุฑู" },
  { code: "sudanese", name: "Sudanese", flag: "๐ธ๐ฉ", nameArabic: "ุณูุฏุงูู" },
  { code: "moroccan", name: "Moroccan", flag: "๐ฒ๐ฆ", nameArabic: "ูุบุฑุจู" },
  { code: "algerian", name: "Algerian", flag: "๐ฉ๐ฟ", nameArabic: "ุฌุฒุงุฆุฑู" },
  { code: "tunisian", name: "Tunisian", flag: "๐น๐ณ", nameArabic: "ุชููุณู" },
  { code: "libyan", name: "Libyan", flag: "๐ฑ๐พ", nameArabic: "ููุจู" },
  { code: "mauritanian", name: "Mauritanian", flag: "๐ฒ๐ท", nameArabic: "ููุฑูุชุงูู" },
  { code: "somali", name: "Somali", flag: "๐ธ๐ด", nameArabic: "ุตููุงูู" },
  { code: "msa", name: "Modern Standard Arabic", flag: "๐", nameArabic: "ุงููุตุญู" }
];

export const getDialectInfo = (dialectCode: Dialect): DialectInfo | undefined => {
  return DIALECTS.find(d => d.code === dialectCode);
};

// Examples for each dialect to help with testing
export const getDialectExample = (dialect: Dialect): string => {
  switch (dialect) {
    case "egyptian":
      return "ุงูููุงุฑุฏุฉ ูู ุทุงูุฉ ุฅูุฌุงุจูุฉ ูู ุงูุดุบู ูุง ุตุฏููู ๐ผโจ";
    case "tunisian":
      return "ุงูููุงูุจ ุชุนุทูู ุฏูุนุฉ ุงูููู ูู ุงูุนูุงูุงุช ๐ฌ";
    case "lebanese":
      return "ุงูููู ุงูุทุงูุน ููุงุณุจ ููุชูุงุตู ูุงูุชุฎุทูุท ๐";
    case "msa":
      return "ุงูููุฑ ูู ุจูุชู ุงูุณุงุฏุณุ ูุง ูุดูุฑ ุฅูู ุชุญุณูู ูู ุงูุฑูุชูู ุงููููู.";
    case "saudi":
      return "ุงููุฌูู ุงูููู ุชุดูุฑ ุฅูู ูุฑุต ุฌุฏูุฏุฉ ูู ูุฌุงู ุงูุนูู โจ๐";
    case "moroccan":
      return "ุงูููู ุบุงุฏู ูููู ูุฒูุงู ูููุงุกุงุช ูุตุงูู ุงููุดุงูู ุงููุฏููุฉ ๐";
    // Add more examples as needed
    default:
      return "โจ ุงูุทุงูุฉ ุงูููููุฉ ุชุฏุนูู ุงูููู ูู ุฑุญูุชู ุงูุฑูุญูุฉ ๐";
  }
};

export const getDialectGreeting = (dialect: Dialect): string => {
  switch (dialect) {
    case "egyptian":
      return "ุฃููุงู ุจูู ูู ุนุงูู ุงููุฌูู ูุงูุฃุจุฑุงุฌ! ๐โจ";
    case "saudi":
      return "ุญูุงู ุงููู ูู ุนุงูู ุงูููู ูุงูุชูุฌูู! โจ๐ฎ";
    case "lebanese":
      return "ูุฑุญุจุง ููู ุจุนุงูู ุงููุฌูู ูุงูููู! ๐โจ";
    case "moroccan":
      return "ูุฑุญุจุง ุจูู ูุนุงูู ุงููุฌูู! โจ๐";
    case "tunisian":
      return "ูุฑุญุจุง ุจูู ูู ุนุงูู ุงููุฌูู ูุงูุชูุฌูู! ๐";
    case "msa":
      return "ูุฑุญุจุงู ุจู ูู ุนุงูู ุงูููู ูุงูุชูุฌูู! โจ๐ฎ";
    // Add more greetings for other dialects
    default:
      return "ุฃููุงู ุจู ูู ุฑุญูุฉ ุงูููู ูุงููุฌูู! ๐โจ";
  }
};
